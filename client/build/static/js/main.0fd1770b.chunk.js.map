{"version":3,"sources":["reducers/index.js","reducers/githubReducer.js","actions/types.js","actions/index.js","components/layout/Search.js","components/Results.js","components/Details.js","components/layout/Header.js","components/App.js","index.js"],"names":["combineReducers","github","state","action","type","payload","form","formReducer","fetchRepos","formValues","dispatch","a","query","Search","language","Language","console","log","axios","get","response","data","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","renderDropdown","style","marginBottom","value","onSubmit","props","this","handleSubmit","Field","name","component","React","Component","connect","reduxForm","validate","errors","title","Results","loginLink","login","to","length","Object","values","map","git","index","key","description","stargazers_count","class","owner","margin","renderResults","Details","match","params","fetchRepo","repo","keys","Header","App","path","exact","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fd1770b.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport githubReducer from './githubReducer'\r\n\r\nexport default combineReducers({\r\n    github: githubReducer,\r\n    form: formReducer\r\n})","import {FETCH_REPOS, FETCH_REPO} from '../actions/types'\r\n\r\nexport default (state = {}, action) => {\r\n    switch(action.type){\r\n        case FETCH_REPOS:\r\n            return action.payload;\r\n        case FETCH_REPO: \r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export const FETCH_REPOS = 'FETCH_REPOS';\r\nexport const FETCH_REPO = 'FETCH_REPO';","import {FETCH_REPOS, FETCH_REPO} from '../actions/types';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const fetchRepos = (formValues) => async (dispatch) => {\r\n    const query = formValues.Search;\r\n    const language = formValues.Language;\r\n\r\n    console.log(query,language)\r\n\r\n    const response = await axios.get(`/github/results/${query}/${language}`);\r\n    \r\n    dispatch({\r\n        type: FETCH_REPOS,\r\n        payload: response.data\r\n    })\r\n}\r\n\r\nexport const fetchRepo = (owner,name) => async (dispatch) => {\r\n    const response = await axios.get(`/github/repository/${owner}/${name}`);\r\n\r\n    dispatch({\r\n        type: FETCH_REPO,\r\n        payload: response.data\r\n    })\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchRepos} from '../../actions/index'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nclass Search extends React.Component{\r\n\r\n    renderError({error,touched}){\r\n        if(touched && error){\r\n            return(\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    renderInput = ({input, label, meta}) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error': ''}`;\r\n        return( \r\n            <div className={className}>   \r\n                <label>{label}</label>    \r\n                <input {...input} autoComplete=\"off\"/>\r\n                {this.renderError(meta)}\r\n            </div>   \r\n        )\r\n    }\r\n    renderDropdown = ({input, label, meta}) => {\r\n        return(\r\n            <div style={{marginBottom: \"10px\"}}>\r\n                <select {...input}>\r\n                    <option value=\"\">Filter By Language</option>\r\n                    <option value=\"JavaScript\">JavaScript</option>\r\n                    <option value=\"Java\">Java</option>\r\n                    <option value=\"C\">C</option>\r\n                    <option value=\"C+\">C+</option>\r\n                    <option value=\"C#\">C#</option>\r\n                    <option value=\"Python\">Python</option>\r\n                    <option value=\"PHP\">PHP</option>\r\n                    <option value=\"Assembly\">Assembly</option>\r\n                    <option value=\"Kotlin\">Kotlin</option>\r\n                    <option value=\"Ruby\">Ruby</option>\r\n                    <option value=\"SQL\">SQL</option>\r\n                    <option value=\"Express\">Express</option>\r\n                    <option value=\"HTML5\">HTML5</option>\r\n                    <option value=\"CSS3\">CSS3</option>\r\n                    <option value=\"Rust\">Rust</option>\r\n                    <option value=\"Dart\">Dart</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n    onSubmit = (formValues) => {\r\n        console.log(formValues)\r\n        this.props.fetchRepos(formValues);\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"ui segment\">\r\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                <Field name=\"Search\" label=\"Search for Repository\" component={this.renderInput}/>\r\n                <Field name=\"Language\" component={this.renderDropdown}/>\r\n                <button className=\"ui primary button\">Submit</button>      \r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n    if(!formValues.Search){\r\n        //only ran if user did not enter in a title\r\n        errors.title = \"You must enter a title\"\r\n    }\r\n    return errors;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        github: state.github\r\n    }\r\n}\r\n\r\nSearch = connect(\r\n    mapStateToProps,{\r\n        fetchRepos\r\n    }\r\n)(Search);\r\n\r\nexport default reduxForm({\r\n    form: 'search',\r\n    validate\r\n})(Search);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {fetchRepos} from '../actions'\r\nimport Search from '../components/layout/Search'\r\n\r\nclass Results extends React.Component{\r\n\r\n    componentDidMount(formValues){\r\n        const data = {\r\n            Search: 'Tetris',\r\n            Language: 'Assembly'\r\n        }\r\n        console.log(formValues)\r\n        this.props.fetchRepos(data);\r\n    }\r\n\r\n    loginLink = (login,name) => {\r\n        console.log(login,name)\r\n        if(!login){\r\n            return(\r\n                <div>Loading...</div>\r\n            )\r\n        } else {\r\n            return(\r\n                <Link to={`/repo/${login}/${name}`} className=\"ui primary button\">\r\n                    More Info\r\n                </Link>\r\n            )\r\n        }\r\n    }\r\n    renderResults(){\r\n        if(!this.props.github.length){\r\n            return(\r\n                <div> Loading...</div>\r\n            )\r\n        } else {\r\n            return Object.values(this.props.github).map((git,index) => {\r\n                    return(\r\n                        <div className=\"ui fluid card\" key={index}>  \r\n                            <div className=\"content\">\r\n                                <div className=\"header\">\r\n                                    <h1>{git.name}</h1>\r\n                                </div>\r\n                                <div className=\"description\">\r\n                                    <p>{git.description}</p>\r\n                                </div>           \r\n                            </div>\r\n                            <div className=\"extra content\">\r\n                                    <span>\r\n                                        {git.stargazers_count} <i class=\"star icon\"></i>\r\n                                    </span>\r\n                            </div>\r\n                            {this.loginLink(git.owner.login, git.name)}\r\n                        </div>\r\n                )\r\n            }) \r\n        }  \r\n    }\r\n    render(){\r\n        console.log(this.props.github)\r\n        return(\r\n            <div className=\"ui container\">\r\n                <Search/>\r\n                <div className=\"ui four stackable cards\" style={{margin:'0 auto'}}>\r\n                    {this.renderResults()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        github: state.github\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchRepos})(Results)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchRepo} from '../actions';\r\n\r\nclass Details extends React.Component{\r\n\r\n    componentDidMount(){\r\n        if(this.props.match.params){\r\n            this.props.fetchRepo(this.props.match.params.owner, this.props.match.params.repo)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props)\r\n        if(Object.keys(this.props.github).length === 0 || !this.props.github.owner){\r\n            return(\r\n                <div>Loading...</div>\r\n            )\r\n        } else {\r\n\r\n\r\n        return(\r\n            <div className=\"ui container\">\r\n                <h4>{this.props.github.name}</h4>\r\n                <div className=\"description\">\r\n                    <p>Owner: <b> {this.props.github.owner.login}</b></p>\r\n                    <p>{this.props.github.description}</p>\r\n                    <p>Language(s): {this.props.github.language}</p>\r\n                    <div>\r\n                        {this.props.github.stargazers_count} <i class=\"star icon\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )}\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        github: state.github\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    fetchRepo\r\n})(Details);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"ui menu\">\r\n                <div className=\"header item\">\r\n                    <Link to={'/'}>RepoSearch</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport Results from './Results';\nimport Details from './Details';\nimport Header from './layout/Header';\nimport {BrowserRouter, Route} from 'react-router-dom'\n\n\nclass App extends React.Component{\n  render(){\n    return(\n      <div>\n        <BrowserRouter>\n          <Header/>\n          <div>\n            <Route path=\"/\" exact component={Results}/>\n            <Route path=\"/repo/:owner/:repo\" exact component={Details}/>\n          </div>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore,applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport reduxThunk from 'redux-thunk'\n\nimport reducers from './reducers'\nimport App from './components/App';\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk))\n\nReactDOM.render(\n                  <Provider store={store}>\n                    <App />\n                  </Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}